{"version":3,"sources":["components/CreateRoom.js","components/Peer.js","components/Menubar.js","components/Room.js","App.js","reportWebVitals.js","index.js"],"names":["CreateRoom","props","onClick","id","uuid","history","push","createPeer","userToSignal","callerID","stream","socketRef","peer","Peer","initiator","trickle","on","data","current","emit","addPeer","incomingSignal","signal","Menubar","audio","video","audioTracks","forEach","track","enabled","toggleAudio","videoTracks","toggleVideo","Container","styled","div","StyledVideo","Video","ref","useRef","useEffect","srcObject","playsInline","autoPlay","constraints","echoCancellation","width","min","height","Room","useState","peers","setPeers","setAudio","setVideo","userVideo","peersRef","roomID","match","params","a","io","connect","navigator","mediaDevices","getUserMedia","isMuted","getAudioTracks","isOn","getVideoTracks","console","log","users","peerUserID","peerID","payload","newPeer","find","p","peerLeft","destroy","newPeers","filter","videoChat","muted","map","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18170e34.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuid } from \"uuid\"; // to generate random roomId(s)\n\nconst CreateRoom = (props) => {\n  const create = () => {\n    const id = uuid();\n    props.history.push(`/room/${id}`); // redirect to a randomly generated room and push to history stack\n  };\n\n  return <button onClick={create}>Create room</button>;\n};\n\nexport default CreateRoom;\n","import Peer from \"simple-peer\";\n\n// called when \"joiner\" creates a peer connection\nexport function createPeer(userToSignal, callerID, stream, socketRef) {\n  const peer = new Peer({\n    initiator: true,\n    trickle: false,\n    stream,\n  });\n\n  // \"signal\" is triggered once the peer object is created\n  peer.on(\"signal\", (data) => {\n    // create an offer to the peer via the backend\n    socketRef.current.emit(\"offer\", { userToSignal, callerID, data });\n  });\n\n  return peer;\n}\n\n// called when person in the call makes a peer connection with the \"joiner\"\nexport function addPeer(incomingSignal, callerID, stream, socketRef) {\n  const peer = new Peer({\n    initiator: false, // person who is already in the call is not the initiator\n    trickle: false,\n    stream,\n  });\n\n  // \"signal\" is triggered once the peer object is created\n  peer.on(\"signal\", (data) => {\n    // accept the offer via the backend\n    socketRef.current.emit(\"answer\", { data, callerID });\n  });\n\n  // establish connection\n  peer.signal(incomingSignal);\n\n  return peer;\n}\n","import React from 'react'\n\nconst Menubar = ({ audio, video }) => {\n    return (\n        <div>\n            <button onClick={() => toggleAudio(audio)}>\n                Mute\n            </button>\n            <button onClick={() => toggleVideo(video)}>\n                Video\n            </button>\n        </div>\n    );\n};\n\nfunction toggleAudio(audio) {\n    if (audio && audio.audioTracks) {\n        audio.audioTracks.forEach(track => track.enabled = !track.enabled);\n    }\n}\n\nfunction toggleVideo(video) {\n    if (video && video.videoTracks) {\n        video.videoTracks.forEach(track => track.enabled = !track.enabled);\n    }\n}\n\nexport default Menubar\n","// built in react\nimport { useEffect, useRef, useState } from \"react\";\n\n// external packages\nimport io from \"socket.io-client\";\nimport styled from \"styled-components\";\n\n// internal components\nimport { createPeer, addPeer } from \"./Peer\";\nimport Menubar from \"./Menubar\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  height: 100vh;\n  width: 90%;\n  margin: auto;\n  flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n  height: 40%;\n  width: 50%;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\nconst constraints = {\n  audio: { echoCancellation: true },\n  video: {\n    width: { min: 1280 },\n    height: { min: 720 },\n  },\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const [audio, setAudio] = useState({});\n  const [video, setVideo] = useState({});\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    videoChat();\n  }, []);\n\n  async function videoChat() {\n    socketRef.current = io.connect(\"/\");\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    userVideo.current.srcObject = stream;\n    setAudio({ isMuted: false, audioTracks: stream.getAudioTracks() });\n    setVideo({ isOn: true, videoTracks: stream.getVideoTracks() });\n    socketRef.current.emit(\"join-room\", roomID);\n\n    socketRef.current.on(\"room-full\", () =>\n      console.log(\"Sorry the room is full!\")\n    );\n\n    socketRef.current.on(\"all-users\", (users) => {\n      const peers = [];\n      users.forEach((peerUserID) => {\n        const peer = createPeer(\n          peerUserID,\n          socketRef.current.id,\n          stream,\n          socketRef\n        );\n        peersRef.current.push({\n          peerID: peerUserID,\n          peer,\n        });\n        peers.push({\n          peerID: peerUserID,\n          peer,\n        });\n      });\n      setPeers(peers);\n    });\n\n    socketRef.current.on(\"user-joined\", (payload) => {\n      const peer = addPeer(payload.data, payload.callerID, stream, socketRef);\n      peersRef.current.push({\n        peerID: payload.callerID,\n        peer,\n      });\n      const newPeer = {\n        peerID: payload.callerID,\n        peer,\n      };\n      setPeers((users) => [...users, newPeer]);\n    });\n\n    socketRef.current.on(\"receiving-answer\", (payload) => {\n      const item = peersRef.current.find((p) => p.peerID === payload.id);\n      item.peer.signal(payload.data);\n    });\n\n    socketRef.current.on(\"user-left\", (id) => {\n      const peerLeft = peersRef.current.find((p) => p.peerID === id);\n      if (peerLeft) {\n        peerLeft.peer.destroy();\n      }\n      const newPeers = peersRef.current.filter((p) => p.peerID !== id);\n      peersRef.current = newPeers;\n      setPeers(newPeers);\n    });\n  }\n\n  return (\n    <Container>\n      <StyledVideo muted ref={userVideo} autoPlay playsInline />\n      {peers.map((peer) => {\n        return <Video key={peer.peerID} peer={peer.peer} />;\n      })}\n      <Menubar audio={audio} video={video} />\n    </Container>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./components/CreateRoom\";\nimport Room from \"./components/Room\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={CreateRoom} />\n        <Route path=\"/room/:roomID\" component={Room} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}