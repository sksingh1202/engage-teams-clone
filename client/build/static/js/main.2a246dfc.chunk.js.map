{"version":3,"sources":["components/CreateRoom.js","components/Peer.js","components/Menubar.js","components/Room.js","App.js","reportWebVitals.js","index.js"],"names":["CreateRoom","props","onClick","id","uuid","history","push","createPeer","userToSignal","callerID","stream","socketRef","peer","Peer","initiator","trickle","getTracks","forEach","track","addTrack","err","console","log","on","data","current","emit","addPeer","incomingSignal","error","signal","useStyles","makeStyles","root","position","bottom","width","backgroundColor","clone","obj","copy","constructor","attr","hasOwnProperty","video","userStream","peersRef","screenShare","setScreenShare","screenTrackRef","a","navigator","mediaDevices","getDisplayMedia","cursor","p","replaceTrack","videoTracks","onended","stop","Menubar","audio","setAudio","setVideo","leaveRoom","useRef","classes","BottomNavigation","showLabels","className","BottomNavigationAction","audioTracks","enabled","isMuted","toggleAudio","label","style","color","icon","isOn","toggleVideo","shareScreen","theme","display","flexWrap","justifyContent","overflow","gridList","height","padding","listStyle","Container","styled","div","StyledVideo","constraints","echoCancellation","min","Video","ref","useEffect","srcObject","playsInline","autoPlay","controls","objectFit","Room","useState","peers","setPeers","setHeight","userVideo","h","window","screen","addEventListener","new_h","roomID","match","params","io","connect","getUserMedia","getAudioTracks","getVideoTracks","users","peerUserID","peerID","payload","find","peerLeft","destroy","newPeers","filter","videoChat","calcCols","count","muted","GridList","cellHeight","Math","floor","cols","map","GridListTile","rows","length","disconnect","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a246dfc.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuid } from \"uuid\"; // to generate random roomId(s)\n\nconst CreateRoom = (props) => {\n  const create = () => {\n    const id = uuid();\n    props.history.push(`/room/${id}`); // redirect to a randomly generated room and push to history stack\n  };\n\n  return <button onClick={create}>Create room</button>;\n};\n\nexport default CreateRoom;\n","import Peer from \"simple-peer\";\n\n// called when \"joiner\" creates a peer connection\nexport function createPeer(userToSignal, callerID, stream, socketRef) {\n  const peer = new Peer({\n    initiator: true,\n    trickle: false,\n    // stream,\n  });\n\n  try {\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\n  } catch (err) {\n    console.log(`Error in createPeer: ${err}`);\n  }\n\n  // \"signal\" is triggered once the peer object is created\n  peer.on(\"signal\", (data) => {\n    // create an offer to the peer via the backend\n    socketRef.current.emit(\"offer\", { userToSignal, callerID, data });\n  });\n\n  return peer;\n}\n\n// called when person in the call makes a peer connection with the \"joiner\"\nexport function addPeer(incomingSignal, callerID, stream, socketRef) {\n  const peer = new Peer({\n    initiator: false, // person who is already in the call is not the initiator\n    trickle: false,\n    // stream,\n  });\n\n  try {\n    stream.getTracks().forEach((track) => peer.addTrack(track, stream));\n  } catch (error) {\n    console.log(`Error in addPeer: ${error}`);\n  }\n\n  // \"signal\" is triggered once the peer object is created\n  peer.on(\"signal\", (data) => {\n    // accept the offer via the backend\n    socketRef.current.emit(\"answer\", { data, callerID });\n  });\n\n  // establish connection\n  peer.signal(incomingSignal);\n\n  return peer;\n}\n","import React from \"react\";\nimport { useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"absolute\",\n    bottom: \"3%\",\n    width: \"100%\",\n    backgroundColor: \"#202124\",\n  },\n});\n\nconst Menubar = ({\n  audio,\n  video,\n  screenShare,\n  setAudio,\n  setVideo,\n  setScreenShare,\n  leaveRoom,\n  peersRef,\n  userStream,\n}) => {\n  const screenTrackRef = useRef();\n  const classes = useStyles();\n\n  return (\n    <BottomNavigation showLabels className={classes.root}>\n      <BottomNavigationAction\n        onClick={() => toggleAudio(audio, setAudio)}\n        label={\n          audio.isMuted ? (\n            <span style={{ color: \"white\" }}>Turn on microphone</span>\n          ) : (\n            <span style={{ color: \"white\" }}>Turn off microphone</span>\n          )\n        }\n        icon={\n          audio.isMuted ? (\n            <MicOffIcon color=\"secondary\" />\n          ) : (\n            <MicIcon style={{ color: \"white\" }} />\n          )\n        }\n      />\n      <BottomNavigationAction\n        onClick={() => toggleVideo(video, setVideo)}\n        label={\n          video.isOn ? (\n            <span style={{ color: \"white\" }}>Turn off camera</span>\n          ) : (\n            <span style={{ color: \"white\" }}>Turn on camera</span>\n          )\n        }\n        icon={\n          video.isOn ? (\n            <VideocamIcon style={{ color: \"white\" }} />\n          ) : (\n            <VideocamOffIcon color=\"secondary\" />\n          )\n        }\n      />\n      <BottomNavigationAction\n        onClick={() =>\n          shareScreen(\n            video,\n            userStream,\n            peersRef,\n            screenShare,\n            setScreenShare,\n            screenTrackRef\n          )\n        }\n        label={\n          screenShare ? (\n            <span style={{ color: \"white\" }}>Stop presenting</span>\n          ) : (\n            <span style={{ color: \"white\" }}>Present now</span>\n          )\n        }\n        icon={\n          screenShare ? (\n            <StopScreenShareIcon color=\"secondary\" />\n          ) : (\n            <ScreenShareIcon style={{ color: \"white\" }} />\n          )\n        }\n      />\n      <BottomNavigationAction\n        onClick={() => leaveRoom()}\n        label={<span style={{ color: \"white\" }}>Leave call</span>}\n        icon={<CallEndIcon color=\"secondary\" />}\n      />\n    </BottomNavigation>\n  );\n};\n\nfunction clone(obj) {\n  if (null == obj || \"object\" != typeof obj) return obj;\n  let copy = obj.constructor();\n  for (let attr in obj) {\n    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n  }\n  return copy;\n}\n\nfunction toggleAudio(audio, setAudio) {\n  if (audio && audio.audioTracks) {\n    audio.audioTracks.forEach((track) => (track.enabled = !track.enabled));\n    audio.isMuted = !audio.isMuted;\n    const newAudio = clone(audio);\n    setAudio(newAudio);\n  }\n}\n\nfunction toggleVideo(video, setVideo) {\n  if (video && video.videoTracks) {\n    video.videoTracks.forEach((track) => (track.enabled = !track.enabled));\n    video.isOn = !video.isOn;\n    const newVideo = clone(video);\n    setVideo(newVideo);\n  }\n}\n\nasync function shareScreen(\n  video,\n  userStream,\n  peersRef,\n  screenShare,\n  setScreenShare,\n  screenTrackRef\n) {\n  try {\n    console.log(screenTrackRef.current);\n    if (!screenShare) {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        cursor: true,\n      });\n      screenTrackRef.current = stream.getTracks()[0];\n      peersRef.current.forEach((p) => {\n        p.peer.replaceTrack(\n          video.videoTracks[0],\n          screenTrackRef.current,\n          userStream.current\n        );\n      });\n      setScreenShare(true);\n      screenTrackRef.current.onended = () => {\n        peersRef.current.forEach((p) => {\n          p.peer.replaceTrack(\n            screenTrackRef.current,\n            video.videoTracks[0],\n            userStream.current\n          );\n        });\n      };\n    } else if (screenTrackRef.current) {\n      console.log(\"RAN\");\n      screenTrackRef.current.stop();\n      setScreenShare(false);\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport default Menubar;\n","// built in react\nimport { useEffect, useRef, useState } from \"react\";\n\n// external packages\nimport io from \"socket.io-client\";\nimport styled from \"styled-components\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\n\n// internal components\nimport { createPeer, addPeer } from \"./Peer\";\nimport Menubar from \"./Menubar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: \"#202124\",\n  },\n  gridList: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    padding: 0,\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    overflow: \"auto\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Container = styled.div`\n  position: absolute;\n  top: 10px;\n  bottom: 10px;\n  height: 100%;\n  width: 100%;\n  margin: auto;\n  background-color: #202124;\n`;\n\nconst StyledVideo = styled.video`\n  position: absolute;\n  right: 1%;\n  bottom: 5%;\n  height: 16%;\n  width: 20%;\n  z-index: 1;\n`;\n\nconst constraints = {\n  audio: { echoCancellation: true },\n  video: {\n    width: { min: 1280 },\n    height: { min: 720 },\n  },\n};\n\nconst Video = (props) => {\n  const ref = useRef();\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  return (\n    <video\n      height=\"100%\"\n      width=\"100%\"\n      playsInline\n      autoPlay\n      controls\n      ref={ref}\n      style={{ padding: 0, objectFit: \"cover\" }}\n    />\n  );\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const [audio, setAudio] = useState({});\n  const [video, setVideo] = useState({});\n  const [height, setHeight] = useState();\n  const [screenShare, setScreenShare] = useState(false);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const userStream = useRef();\n\n  useEffect(() => {\n    let h = window.screen.height;\n    setHeight(h);\n    window.addEventListener(\"resize\", () => {\n      let new_h = window.screen.height;\n      console.log(new_h);\n      setHeight(new_h);\n    });\n\n    const roomID = props.match.params.roomID;\n    const videoChat = async () => {\n      socketRef.current = io.connect(\"/\");\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      userStream.current = stream;\n      userVideo.current.srcObject = stream;\n      setAudio({ isMuted: false, audioTracks: stream.getAudioTracks() });\n      setVideo({ isOn: true, videoTracks: stream.getVideoTracks() });\n      socketRef.current.emit(\"join-room\", roomID);\n\n      socketRef.current.on(\"room-full\", () =>\n        console.log(\"Sorry the room is full!\")\n      );\n\n      socketRef.current.on(\"all-users\", (users) => {\n        const peers = [];\n        users.forEach((peerUserID) => {\n          const peer = createPeer(\n            peerUserID,\n            socketRef.current.id,\n            stream,\n            socketRef\n          );\n\n          peersRef.current.push({\n            peerID: peerUserID,\n            peer,\n          });\n          peers.push({\n            peerID: peerUserID,\n            peer,\n          });\n        });\n        setPeers([...peersRef.current]);\n      });\n\n      socketRef.current.on(\"user-joined\", (payload) => {\n        const peer = addPeer(payload.data, payload.callerID, stream, socketRef);\n\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n        setPeers([...peersRef.current]);\n      });\n\n      socketRef.current.on(\"receiving-answer\", (payload) => {\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\n        item.peer.signal(payload.data);\n      });\n\n      socketRef.current.on(\"user-left\", (id) => {\n        const peerLeft = peersRef.current.find((p) => p.peerID === id);\n        if (peerLeft) {\n          peerLeft.peer.destroy();\n        }\n        const newPeers = peersRef.current.filter((p) => p.peerID !== id);\n        peersRef.current = newPeers;\n        setPeers(newPeers);\n      });\n    };\n    videoChat();\n  }, []);\n\n  const leaveRoom = () => {\n    userVideo.current.srcObject.getTracks().forEach((track) => track.stop());\n    peersRef.current = null;\n    setPeers(peersRef.current);\n    socketRef.current.disconnect();\n    props.history.push(`/`);\n  };\n\n  const calcRows = (count) => {\n    if (count <= 2) return 30;\n    if (count <= 6) return 15;\n    if (count <= 9) return 10;\n    if (count <= 16) return 7;\n  };\n\n  const calcCols = (count) => {\n    if (count === 1) return 60;\n    if (count <= 4) return 30;\n    if (count <= 9) return 20;\n    if (count <= 16) return 15;\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Container>\n      <StyledVideo controls muted ref={userVideo} autoPlay playsInline />\n      <div className={classes.root}>\n        <GridList\n          cellHeight={Math.floor(height / 35)}\n          cols={60}\n          className={classes.gridList}\n        >\n          {peers.map((peer) => (\n            <GridListTile\n              rows={calcRows(peers.length)}\n              cols={calcCols(peers.length)}\n              key={peer.peerID}\n            >\n              <Video peer={peer.peer} />\n            </GridListTile>\n          ))}\n        </GridList>\n      </div>\n      <Menubar\n        audio={audio}\n        video={video}\n        screenShare={screenShare}\n        setAudio={setAudio}\n        setVideo={setVideo}\n        setScreenShare={setScreenShare}\n        leaveRoom={leaveRoom}\n        peersRef={peersRef}\n        userStream={userStream}\n      />\n    </Container>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./components/CreateRoom\";\nimport Room from \"./components/Room\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={CreateRoom} />\n        <Route path=\"/room/:roomID\" component={Room} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport '@fontsource/roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}