{"version":3,"sources":["components/CreateRoom.js","components/Peer.js","components/Menubar.js","components/Room.js","App.js","reportWebVitals.js","index.js"],"names":["CreateRoom","props","onClick","id","uuid","history","push","createPeer","userToSignal","callerID","stream","socketRef","peer","Peer","initiator","trickle","on","data","current","emit","addPeer","incomingSignal","signal","Menubar","audio","video","leaveRoom","shareScreen","audioTracks","forEach","track","enabled","toggleAudio","videoTracks","toggleVideo","Container","styled","div","StyledVideo","Video","ref","useRef","useEffect","srcObject","playsInline","autoPlay","constraints","echoCancellation","width","min","height","Room","useState","peers","setPeers","setAudio","setVideo","userVideo","userVideoTracks","peersRef","roomID","match","params","a","io","connect","navigator","mediaDevices","getUserMedia","isMuted","getAudioTracks","isOn","getVideoTracks","console","log","users","peerUserID","getTracks","addTrack","err","peerID","payload","error","find","p","peerLeft","destroy","newPeers","filter","videoChat","getDisplayMedia","cursor","screenTrack","sender","kind","replaceTrack","onended","muted","map","stop","disconnect","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd26193a.chunk.js","sourcesContent":["import React from \"react\";\nimport { v1 as uuid } from \"uuid\"; // to generate random roomId(s)\n\nconst CreateRoom = (props) => {\n  const create = () => {\n    const id = uuid();\n    props.history.push(`/room/${id}`); // redirect to a randomly generated room and push to history stack\n  };\n\n  return <button onClick={create}>Create room</button>;\n};\n\nexport default CreateRoom;\n","import Peer from \"simple-peer\";\n\n// called when \"joiner\" creates a peer connection\nexport function createPeer(userToSignal, callerID, stream, socketRef) {\n  const peer = new Peer({\n    initiator: true,\n    trickle: false,\n    // stream,\n  });\n\n  // \"signal\" is triggered once the peer object is created\n  peer.on(\"signal\", (data) => {\n    // create an offer to the peer via the backend\n    socketRef.current.emit(\"offer\", { userToSignal, callerID, data });\n  });\n\n  return peer;\n}\n\n// called when person in the call makes a peer connection with the \"joiner\"\nexport function addPeer(incomingSignal, callerID, stream, socketRef) {\n  const peer = new Peer({\n    initiator: false, // person who is already in the call is not the initiator\n    trickle: false,\n    // stream,\n  });\n\n  // \"signal\" is triggered once the peer object is created\n  peer.on(\"signal\", (data) => {\n    // accept the offer via the backend\n    socketRef.current.emit(\"answer\", { data, callerID });\n  });\n\n  // establish connection\n  peer.signal(incomingSignal);\n\n  return peer;\n}\n","import React from \"react\";\n\nconst Menubar = ({ audio, video, leaveRoom, shareScreen }) => {\n  return (\n    <div>\n      <button onClick={() => toggleAudio(audio)}>Mute</button>\n      <button onClick={() => toggleVideo(video)}>Video</button>\n      <button onClick={() => leaveRoom()}>Leave</button>\n      <button onClick={() => shareScreen()}>Share Screen</button>\n    </div>\n  );\n};\n\nfunction toggleAudio(audio) {\n  if (audio && audio.audioTracks) {\n    audio.audioTracks.forEach((track) => (track.enabled = !track.enabled));\n  }\n}\n\nfunction toggleVideo(video) {\n  if (video && video.videoTracks) {\n    video.videoTracks.forEach((track) => (track.enabled = !track.enabled));\n  }\n}\n\nexport default Menubar;\n","// built in react\nimport { useEffect, useRef, useState } from \"react\";\n\n// external packages\nimport io from \"socket.io-client\";\nimport styled from \"styled-components\";\n\n// internal components\nimport { createPeer, addPeer } from \"./Peer\";\nimport Menubar from \"./Menubar\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  height: 100vh;\n  width: 90%;\n  margin: auto;\n  flex-wrap: wrap;\n`;\n\nconst StyledVideo = styled.video`\n  height: 40%;\n  width: 50%;\n`;\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <StyledVideo playsInline autoPlay ref={ref} />;\n};\n\nconst constraints = {\n  audio: { echoCancellation: true },\n  video: {\n    width: { min: 1280 },\n    height: { min: 720 },\n  },\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const [audio, setAudio] = useState({});\n  const [video, setVideo] = useState({});\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const userVideoTracks = useRef([]);\n  const peersRef = useRef([]);\n\n  useEffect(() => {\n    const roomID = props.match.params.roomID;\n    const videoChat = async () => {\n      socketRef.current = io.connect(\"/\");\n      const stream = await navigator.mediaDevices.getUserMedia(constraints);\n      userVideo.current.srcObject = stream;\n      setAudio({ isMuted: false, audioTracks: stream.getAudioTracks() });\n      setVideo({ isOn: true, videoTracks: stream.getVideoTracks() });\n      // setUserVideoTracks(stream);\n      socketRef.current.emit(\"join-room\", roomID);\n\n      socketRef.current.on(\"room-full\", () =>\n        console.log(\"Sorry the room is full!\")\n      );\n\n      socketRef.current.on(\"all-users\", (users) => {\n        const peers = [];\n        users.forEach((peerUserID) => {\n          const peer = createPeer(\n            peerUserID,\n            socketRef.current.id,\n            stream,\n            socketRef\n          );\n\n          try{\n            stream.getTracks().forEach((track) =>\n            userVideoTracks.current.push(peer.addTrack(track, stream)));\n          }\n          catch(err) {\n            console.log(`Error in createPeer: ${err}`);\n          }\n\n          peersRef.current.push({\n            peerID: peerUserID,\n            peer,\n          });\n          peers.push({\n            peerID: peerUserID,\n            peer,\n          });\n        });\n        setPeers([...peersRef.current]);\n      });\n\n      socketRef.current.on(\"user-joined\", (payload) => {\n        const peer = addPeer(payload.data, payload.callerID, stream, socketRef);\n\n        try {\n          stream.getTracks().forEach((track) =>\n          userVideoTracks.current.push(peer.addTrack(track, stream)));\n          console.log(`userVideoTracks: ${userVideoTracks}`);\n        } catch (error) {\n          console.log(`Error in addPeer: ${error}`);\n        }\n\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n        setPeers([...peersRef.current]);\n      });\n\n      socketRef.current.on(\"receiving-answer\", (payload) => {\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\n        item.peer.signal(payload.data);\n      });\n\n      socketRef.current.on(\"user-left\", (id) => {\n        const peerLeft = peersRef.current.find((p) => p.peerID === id);\n        if (peerLeft) {\n          peerLeft.peer.destroy();\n        }\n        const newPeers = peersRef.current.filter((p) => p.peerID !== id);\n        peersRef.current = newPeers;\n        setPeers(newPeers);\n      });\n    };\n    videoChat();\n  }, []);\n\n  const leaveRoom = () => {\n    userVideo.current.srcObject.getTracks().forEach((track) => track.stop());\n    peersRef.current = null;\n    setPeers(peersRef.current);\n    socketRef.current.disconnect();\n    props.history.push(`/`);\n  };\n\n  const setUserVideoTracks = (stream) => {\n    const sentinelPeer = new RTCPeerConnection();\n    stream\n      .getTracks()\n      .forEach((track) =>\n        userVideoTracks.current.push(sentinelPeer.addTrack(track))\n      );\n  };\n\n  const shareScreen = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        cursor: true,\n      });\n      const screenTrack = stream.getTracks()[0];\n      console.log(userVideoTracks);\n      userVideoTracks.current\n        .find((sender) => sender.track.kind === \"video\")\n        .replaceTrack(screenTrack);\n      screenTrack.onended = () =>\n        userVideoTracks.current\n          .find((sender) => sender.track.kind === \"video\")\n          .replaceTrack(userVideo.current.srcObject.getTracks()[1]);\n    }\n    catch(e){\n      console.log(e);\n    }\n  };\n\n  return (\n    <Container>\n      <StyledVideo muted ref={userVideo} autoPlay playsInline />\n      {peers.map((peer) => {\n        return <Video key={peer.peerID} peer={peer.peer} />;\n      })}\n      <Menubar audio={audio} video={video} leaveRoom={leaveRoom} shareScreen={shareScreen} />\n    </Container>\n  );\n};\n\nexport default Room;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport CreateRoom from \"./components/CreateRoom\";\nimport Room from \"./components/Room\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={CreateRoom} />\n        <Route path=\"/room/:roomID\" component={Room} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}